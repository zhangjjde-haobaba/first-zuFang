<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:comtext="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring.xsd">
    <!--  组件扫描：排除扫描  -->
    <context:component-scan base-package="com.kgc.zufang">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <!--  配置c3p0数据源  -->
    <context:property-placeholder location="classpath:jdbc.properties"/>
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${mysql.driver}"/>
        <property name="jdbcUrl" value="${mysql.jdbcUrl}"/>
        <property name="user" value="${mysql.user}"/>
        <property name="password" value="${mysql.password}"/>
    </bean>

    <!--  事务管理器  -->
    <!-- <bean id="dataSourceTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean> -->

    <!--  声明式事务-基于注解  -->
    <!-- <tx:annotation-driven transaction-manager="dataSourceTransactionManager"/> -->

    <!--  Spring整合Mybatis配置，先搭建Mybatis环境，再整合  -->
    <!--  1 SqlSession对象的创建和管理，使用一个工厂bean，实例化调用的是getObject  -->
    <bean class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--  配置数据源  -->
        <property name="dataSource" ref="dataSource"/>
        <!--  加载Mybatis的核心配置文件  -->
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
        <!--  Mybatis的SQL映射文件，可以自定义路径解决同名同路径问题  -->
        <property name="mapperLocations" value="classpath:zufang/mapper/*.xml"/>
        <!--  别名处理  -->
        <!-- <property name="typeAliasesPackage" value="com.kgc.qnbbs.beans"/> -->
    </bean>

    <!--  2 Mapper接口的代理实现类对象的创建和管理，装配到spring的IOC容器

        StudentMapper ==>代理实现类对象 ==》加入到Spring的IOC容器中，id值为类名首字母小写：studentMapper

        在业务层service中就可以直接使用@AutoWired注解实现自动装配
     -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.kgc.zufang.mapper"/>
    </bean>

    <!--  全新配置方式，二者不能同时存在  -->
    <!-- <mybatis-spring:scan base-package="com.kgc.qnbbs.mapper"/> -->
</beans>